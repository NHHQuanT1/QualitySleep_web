<div class="home">
  <div class="chart_view">
{{!-- Hiển thị các giá trị madY, madZ, deltaP --}}
 <div class="chart_child">
  <div class="card-header">
      <h5 class="card-title mb-0">Biểu đồ biểu diễn giá trị MadY</h5>
    </div>
      <canvas id="chartjs-dashboard-line" style="display: block; height: 252px; width: 100%;"></canvas>
  <div class="chart-container">
    <div class="card-body py-3">
      <div class="chart chart-sm">
        {{!-- <canvas id="chartjs-dashboard-line"></canvas> --}}
        <script>
          const data = JSON.parse(localStorage.getItem('data'));; // Nhận dữ liệu JSON từ server
              //const dataArray = data.map(row => Math.sin(row.madY*0.1)*100);
              const dataArray = data.map(row => row.madY);


              // Bước 2: Lấy thẻ canvas
              const ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
              // Bước 3: Khởi tạo biểu đồ
              const myChart = new Chart(ctx, {
                type: "line", // Loại biểu đồ (line, bar, v.v.)
                data: {
                  labels: data.map(row => row.id), // Không sử dụng nhãn
                  datasets: [{
                    label: "madY", // Tên của dataset
                    data: dataArray, // Mảng dữ liệu của bạn
                    borderColor: "#5e72e4", // Màu đường biểu đồ
                    backgroundColor: "transparent", // Màu nền (trong suốt)
                    borderWidth: 1, // Độ dày đường biểu đồ
                    pointRadius: 0, // Ẩn các điểm trên biểu đồ
                  }],
                },
                options: {
                  responsive: false, // Tự động điều chỉnh kích thước
                  maintainAspectRatio: false, // Không giữ tỷ lệ khung hình
                  legend: {
                    display: false, // Ẩn chú thích
                  },
                  tooltips: {
                    enabled: false, // Tắt tooltips
                  },
                  scales: {
                    xAxes: [{
                      display: false, // Ẩn trục x và nhãn
                      gridLines: {
                        display: false, // Ẩn đường lưới trên trục x
                      },
                    }],
                    yAxes: [{
                      gridLines: {
                        color: "rgba(0, 0, 0, 0.1)", // Màu đường lưới trục y
                      },
                      ticks: {
                        beginAtZero: true, // Bắt đầu trục y từ 0
                      },
                    }],
                  },
                },
              });
        </script>
    </div>
  </div>
</div>
 </div>

{{!-- Trục Z --}}
 <div class="chart_child">
  <div class="card-header">
      <h5 class="card-title mb-0">Biểu đồ biểu diễn giá trị MadZ</h5>
    </div>
      <canvas id="chartjs-dashboard-line2" style="display: block; height: 252px; width: 100%;"></canvas>
  <div class="chart-container">
    <div class="card-body py-3">
      <div class="chart chart-sm">
        {{!-- <canvas id="chartjs-dashboard-line"></canvas> --}}
        <script>
          const data2 = JSON.parse(localStorage.getItem('data'));; // Nhận dữ liệu JSON từ server
              const dataArray2 = data2.map(row => row.madZ);
              // Bước 2: Lấy thẻ canvas
              const ctx2 = document.getElementById("chartjs-dashboard-line2").getContext("2d");
              // Bước 3: Khởi tạo biểu đồ
              const myChart2 = new Chart(ctx2, {
                type: "line", // Loại biểu đồ (line, bar, v.v.)
                data: {
                  labels: data2.map(row => row.id), // Không sử dụng nhãn
                  datasets: [{
                    label: "madZ", // Tên của dataset
                    data: dataArray2, // Mảng dữ liệu 
                    borderColor: "#5e72e4", // Màu đường biểu đồ
                    backgroundColor: "transparent", // Màu nền (trong suốt)
                    borderWidth: 1, // Độ dày đường biểu đồ
                    pointRadius: 0, // Ẩn các điểm trên biểu đồ
                  }],
                },
                options: {
                  responsive: false, // Tự động điều chỉnh kích thước
                  maintainAspectRatio: false, // Không giữ tỷ lệ khung hình
                  legend: {
                    display: false, // Ẩn chú thích
                  },
                  tooltips: {
                    enabled: false, // Tắt tooltips
                  },
                  scales: {
                    xAxes: [{
                      display: false, // Ẩn trục x và nhãn
                      gridLines: {
                        display: false, // Ẩn đường lưới trên trục x
                      },
                    }],
                    yAxes: [{
                      gridLines: {
                        color: "rgba(0, 0, 0, 0.1)", // Màu đường lưới trục z
                      },
                      ticks: {
                        beginAtZero: true, // Bắt đầu trục y từ 0
                      },
                    }],
                  },
                },
              });
        </script>
    </div>
  </div>
</div>
 </div>

{{!-- Trục deltaP --}}
 <div class="chart_child">
  <div class="card-header">
      <h5 class="card-title mb-0">Biểu đồ biểu diễn giá trị DeltaP</h5>
    </div>
      <canvas id="chartjs-dashboard-line3" style="display: block; height: 252px; width: 100%;"></canvas>
  <div class="chart-container">
    <div class="card-body py-3">
      <div class="chart chart-sm">
        {{!-- <canvas id="chartjs-dashboard-line"></canvas> --}}
        <script>
          const data3 = JSON.parse(localStorage.getItem('data'));; // Nhận dữ liệu JSON từ server
              const dataArray3 = data3.slice(1).map(row => row.deltaP);

              // Bước 2: Lấy thẻ canvas
              const ctx3 = document.getElementById("chartjs-dashboard-line3").getContext("2d");
              // Bước 3: Khởi tạo biểu đồ
              const myChart3 = new Chart(ctx3, {
                type: "line", // Loại biểu đồ (line, bar, v.v.)
                data: {
                  labels: data3.map(row => row.id), // Không sử dụng nhãn
                  datasets: [{
                    label: "deltaP", // Tên của dataset
                    data: dataArray3, // Mảng dữ liệu 
                    borderColor: "#5e72e4", // Màu đường biểu đồ
                    backgroundColor: "transparent", // Màu nền (trong suốt)
                    borderWidth: 1, // Độ dày đường biểu đồ
                    pointRadius: 0, // Ẩn các điểm trên biểu đồ
                  }],
                },
                options: {
                  responsive: false, // Tự động điều chỉnh kích thước
                  maintainAspectRatio: false, // Không giữ tỷ lệ khung hình
                  legend: {
                    display: false, // Ẩn chú thích
                  },
                  tooltips: {
                    enabled: false, // Tắt tooltips
                  },
                  scales: {
                    xAxes: [{
                      display: false, // Ẩn trục x và nhãn
                      gridLines: {
                        display: false, // Ẩn đường lưới trên trục x
                      },
                    }],
                    yAxes: [{
                      gridLines: {
                        color: "rgba(0, 0, 0, 0.1)", // Màu đường lưới trục deltaP
                      },
                      ticks: {
                        beginAtZero: true, // Bắt đầu trục y từ 0
                      },
                    }],
                  },
                },
              });
        </script>
    </div>
  </div>
</div>
 </div>


{{!-- Hiển thị kết quả --}}
      <div class="chart_result">
      <div class="card flex-fill w-100 draggable">
        <div class="card-header">
          <h5 class="card-title mb-0">Đánh giá giấc ngủ</h5>
        </div>
        <div class="card-body d-flex">
          <div class="align-self-center w-100">
            <div class="py-3">
              <div class="chart chart-xs">
                <canvas id="chartjs-dashboard-pie" width="856" height="400" style="display: block; height: 200px; width: 428px;" class="chart-pie chartjs-render-monitor"></canvas>
              </div>
            </div>

            <table class="table mb-0">
              <tbody>
                <tr>
                  <td>Giấc ngủ ngon</td>
                  <td class="text-end" id="good-sleep">0%</td>
                </tr>
                <tr>
                  <td>Giấc ngủ tệ</td>
                  <td class="text-end" id="bad-sleep">0%</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <button id="quality_sleep" type="button" class="btn btn-primary" data-toggle="button" aria-pressed="false" autocomplete="off">
  Kết quả
</button>
    </div>

    <script>
        // Lấy nút "Kết quả" bằng ID
        const qualitySleepButton = document.getElementById('quality_sleep');

        // Lắng nghe sự kiện click
        qualitySleepButton.addEventListener('click', function () {
          const apiUrl = `/caculator`;

          // Gọi API để lấy kết quả
          fetch(apiUrl)
            .then(response => {
              if (!response.ok) {
                throw new Error("Lỗi khi gọi API");
              }
               // Cập nhật kết quả lên UI
              return response.json();
            })
            .then(data => {
              console.log('Dữ liệu nhận được:', data);
             
              const qualitySleep = data.quality_sleep;
              const badSleep = 1 - qualitySleep;

              // Cập nhật bảng kết quả
              document.getElementById('good-sleep').innerText = `${(qualitySleep * 100)}%`;
              document.getElementById('bad-sleep').innerText = `${(badSleep * 100).toFixed(2)}%`;

              // Cập nhật biểu đồ pie chart
              chart.data.datasets[0].data = [qualitySleep * 100, badSleep * 100];
              chart.update();
            })
            .catch(error => {
              console.error('Lỗi khi gọi API:', error);
              alert('Đã xảy ra lỗi khi tính toán kết quả!');
            });
        });

        const chart = new Chart(document.getElementById("chartjs-dashboard-pie"), {
  type: "pie",
  data: {
    labels: ["Giấc ngủ ngon", "Giấc ngủ tệ"],
    datasets: [{
      data: [0, 0], // Giá trị mặc định
      backgroundColor: [
        '#28a745', // Màu cho "Giấc ngủ ngon"
        '#dc3545'  // Màu cho "Giấc ngủ tệ"
      ],
      borderColor: "transparent"
    }]
  },
  options: {
    maintainAspectRatio: false,
    cutoutPercentage: 65,
  }
});
      
    </script>    
    </div>
  </div>
</div>